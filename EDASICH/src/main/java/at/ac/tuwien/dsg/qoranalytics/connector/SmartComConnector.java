/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package at.ac.tuwien.dsg.qoranalytics.connector;

/**
 *
 * @author Jun
 */
//import at.ac.tuwien.dsg.smartcom.adapters.DropboxInputAdapter;
import at.ac.tuwien.dsg.qoranalytics.configuration.Configuration;
import at.ac.tuwien.dsg.qoranalytics.streamprocessing.entity.event.EventMessage;
import at.ac.tuwien.dsg.smartcom.adapters.DropboxOutputAdapter;
import at.ac.tuwien.dsg.smartcom.model.Identifier;
import at.ac.tuwien.dsg.smartcom.model.Message;
import at.ac.tuwien.dsg.smartcom.model.PeerChannelAddress;
import java.io.BufferedReader;
import java.io.InputStreamReader;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;

/**
 *
 * @author dsg
 */
/**
 * This test demonstrates the behaviour of the dropbox input/output adapter.
 * Note that this is not a JUnit test and can only be run by invoking the main
 * method.
 *
 * The test requires the user to add an access token of a dropbox account. This
 * can be generated by creating an app on <a
 * href='https://www.dropbox.com/developers/apps'>https://www.dropbox.com/developers/apps</a>
 * and by clicking the 'Generate' button below the 'Generate access token'
 * headline.
 *
 * The output adapter will create a new file 'task_[TIMESTAMP].task' in the
 * folder 'smartcom' of the linked Dropbox account. Afterwards the input adapter
 * will start looking for the file and will report its existence.
 */
public class SmartComConnector {

    
    
    public void sendMessage(Message message) throws Exception {

        List<Serializable> parameters = new ArrayList<>(2);
        
        parameters.add(Configuration.getConfig("SMARTCOM.TOKEN"));
        parameters.add(Configuration.getConfig("SMARTCOM.STORE"));     //the folder name inside of dropbox 
        PeerChannelAddress address = new PeerChannelAddress(Identifier.peer(Configuration.getConfig("SMARTCOM.PEER")), Identifier.adapter(Configuration.getConfig("SMARTCOM.ADAPTER")), parameters);

        System.out.println("SMARTCOM Output Adapter: Connecting...");
        DropboxOutputAdapter adapter = new DropboxOutputAdapter(address);
        adapter.push(message, null);
        System.out.println("Message sent!");
        
    }
    
    public at.ac.tuwien.dsg.smartcom.model.Message buildMessage(EventMessage eventMessage){

            at.ac.tuwien.dsg.smartcom.model.Message message = new at.ac.tuwien.dsg.smartcom.model.Message.MessageBuilder()
                .setId(Identifier.message(eventMessage.getId()))
                .setContent(eventMessage.getContent())
                .setType(eventMessage.getType())
                .setSubtype(eventMessage.getSubtype())
                .setSenderId(Identifier.peer(eventMessage.getSenderId()))
                .setReceiverId(Identifier.peer(eventMessage.getReceiverId()))
                .setConversationId("" + System.nanoTime())
                .setTtl(eventMessage.getTtl())
                .setLanguage(eventMessage.getLanguage())
                .setSecurityToken(eventMessage.getSecurityToken())
                .create();
            
            return message;
    }

    }
